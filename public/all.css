@charset "UTF-8";/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Light.eot);src:local('Montserrat Light'),local('Montserrat-Light'),url(fonts/Montserrat/Montserrat-Light.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Light.woff) format('woff'),url(fonts/Montserrat/Montserrat-Light.ttf) format('truetype');font-weight:300;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-MediumItalic.eot);src:local('Montserrat Medium Italic'),local('Montserrat-MediumItalic'),url(fonts/Montserrat/Montserrat-MediumItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-MediumItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-MediumItalic.ttf) format('truetype');font-weight:500;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Thin.eot);src:local('Montserrat Thin'),local('Montserrat-Thin'),url(fonts/Montserrat/Montserrat-Thin.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Thin.woff) format('woff'),url(fonts/Montserrat/Montserrat-Thin.ttf) format('truetype');font-weight:100;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-ExtraLightItalic.eot);src:local('Montserrat ExtraLight Italic'),local('Montserrat-ExtraLightItalic'),url(fonts/Montserrat/Montserrat-ExtraLightItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-ExtraLightItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-ExtraLightItalic.ttf) format('truetype');font-weight:200;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-BoldItalic.eot);src:local('Montserrat Bold Italic'),local('Montserrat-BoldItalic'),url(fonts/Montserrat/Montserrat-BoldItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-BoldItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-BoldItalic.ttf) format('truetype');font-weight:700;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-SemiBold.eot);src:local('Montserrat SemiBold'),local('Montserrat-SemiBold'),url(fonts/Montserrat/Montserrat-SemiBold.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-SemiBold.woff) format('woff'),url(fonts/Montserrat/Montserrat-SemiBold.ttf) format('truetype');font-weight:600;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-ExtraLight.eot);src:local('Montserrat ExtraLight'),local('Montserrat-ExtraLight'),url(fonts/Montserrat/Montserrat-ExtraLight.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-ExtraLight.woff) format('woff'),url(fonts/Montserrat/Montserrat-ExtraLight.ttf) format('truetype');font-weight:200;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-ExtraBoldItalic.eot);src:local('Montserrat ExtraBold Italic'),local('Montserrat-ExtraBoldItalic'),url(fonts/Montserrat/Montserrat-ExtraBoldItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-ExtraBoldItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-ExtraBoldItalic.ttf) format('truetype');font-weight:800;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Italic.eot);src:local('Montserrat Italic'),local('Montserrat-Italic'),url(fonts/Montserrat/Montserrat-Italic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Italic.woff) format('woff'),url(fonts/Montserrat/Montserrat-Italic.ttf) format('truetype');font-weight:400;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Bold.eot);src:local('Montserrat Bold'),local('Montserrat-Bold'),url(fonts/Montserrat/Montserrat-Bold.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Bold.woff) format('woff'),url(fonts/Montserrat/Montserrat-Bold.ttf) format('truetype');font-weight:700;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-LightItalic.eot);src:local('Montserrat Light Italic'),local('Montserrat-LightItalic'),url(fonts/Montserrat/Montserrat-LightItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-LightItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-LightItalic.ttf) format('truetype');font-weight:300;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-BlackItalic.eot);src:local('Montserrat #000 Italic'),local('Montserrat-BlackItalic'),url(fonts/Montserrat/Montserrat-BlackItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-BlackItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-BlackItalic.ttf) format('truetype');font-weight:900;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-SemiBoldItalic.eot);src:local('Montserrat SemiBold Italic'),local('Montserrat-SemiBoldItalic'),url(fonts/Montserrat/Montserrat-SemiBoldItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-SemiBoldItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-SemiBoldItalic.ttf) format('truetype');font-weight:600;font-style:italic}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Regular.eot);src:local('Montserrat Regular'),local('Montserrat-Regular'),url(fonts/Montserrat/Montserrat-Regular.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Regular.woff) format('woff'),url(fonts/Montserrat/Montserrat-Regular.ttf) format('truetype');font-weight:400;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Medium.eot);src:local('Montserrat Medium'),local('Montserrat-Medium'),url(fonts/Montserrat/Montserrat-Medium.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Medium.woff) format('woff'),url(fonts/Montserrat/Montserrat-Medium.ttf) format('truetype');font-weight:500;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-ExtraBold.eot);src:local('Montserrat ExtraBold'),local('Montserrat-ExtraBold'),url(fonts/Montserrat/Montserrat-ExtraBold.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-ExtraBold.woff) format('woff'),url(fonts/Montserrat/Montserrat-ExtraBold.ttf) format('truetype');font-weight:800;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-Black.eot);src:local('Montserrat Black'),local('Montserrat-Black'),url(fonts/Montserrat/Montserrat-Black.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-Black.woff) format('woff'),url(fonts/Montserrat/Montserrat-Black.ttf) format('truetype');font-weight:900;font-style:normal}@font-face{font-family:Montserrat;src:url(fonts/Montserrat/Montserrat-ThinItalic.eot);src:local('Montserrat Thin Italic'),local('Montserrat-ThinItalic'),url(fonts/Montserrat/Montserrat-ThinItalic.eot?#iefix) format('embedded-opentype'),url(fonts/Montserrat/Montserrat-ThinItalic.woff) format('woff'),url(fonts/Montserrat/Montserrat-ThinItalic.ttf) format('truetype');font-weight:100;font-style:italic}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.deliveryBg{height:841px;background:url(resources/images/delivery.jpg) no-repeat;background-size:cover;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.delivery{max-width:1200px;margin:0 auto;width:100%;background:rgba(255,255,255,.88);padding:50px 15px;text-align:right}.delivery__title{color:#4f4f4f;margin-bottom:30px;display:inline-block;font-weight:800;font-size:24px;line-height:30px;margin-right:65px}.delivery__title:after{content:'';height:3px;width:100%;background-color:#b5d7f3;display:block;margin-top:5px}.deliveryBox{color:#4f4f4f;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;width:calc(66.66667% - 30px);margin-left:calc(33.33333% + 15px)}@media screen and (max-width:768px){.deliveryBg{height:auto}.delivery{padding-left:15px;padding-right:15px;text-align:center}.deliveryBox{width:calc(100% - 30px);margin-left:calc(0% + 15px);-webkit-box-align:center;-ms-flex-align:center;align-items:center}}@media screen and (max-width:425px){.delivery{padding-left:15px;padding-right:15px}.delivery__title{text-transform:uppercase;margin-right:auto;margin-bottom:20px}.deliveryBox{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}}.deliveryBox__title{font-size:20px;font-weight:600;margin-bottom:15px}.deliveryBox__content{font-size:14px;padding-bottom:15px;margin-bottom:15px;font-weight:500;line-height:20px;border-bottom:1px solid #e2e2e4;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.deliveryBox__content span{font-weight:700}.deliveryBox__icon{margin-left:15px;width:28px;height:28px;-ms-flex-negative:0;flex-shrink:0}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */footer.footer{padding-left:15px;padding-right:15px;display:-webkit-box;display:-ms-flexbox;display:flex;border-top:1px solid #eff0f2;height:350px;background-color:#fff;position:relative}@media screen and (max-width:425px){.deliveryBox__icon{margin-left:0;margin-bottom:15px}.footerInner,footer.footer{padding-left:15px;padding-right:15px}}.map{position:absolute;height:350px;right:0}@media screen and (max-width:970px){.delivery,footer.footer{padding-left:15px;padding-right:15px}.map{display:none}.footerInner{padding-left:15px;padding-right:15px}}.map__triangle{width:0;-webkit-box-sizing:border-box;box-sizing:border-box;border-top:350px solid #fff;border-right:350px solid transparent;top:0;left:0;position:absolute;height:350px}.footerInner{max-width:1200px;margin:0 auto;padding-left:15px;padding-right:15px;width:calc(50% - 30px);margin-right:calc(50% + 15px);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.footer-main-menu{-ms-flex-preferred-size:100px;flex-basis:100px;-ms-flex-negative:0;flex-shrink:0}@media screen and (max-width:970px){.footerInner{width:calc(100% - 30px);margin-right:calc(0% + 15px)}.footer-main-menu{width:calc(100% - 30px);-ms-flex-preferred-size:auto;flex-basis:auto;text-align:center;margin-bottom:20px;margin-top:20px}}@media screen and (max-width:425px){.footer-main-menu{display:none}}.footer-main-menu__link{font-size:16px;font-weight:500;display:inline-block;color:#4f4f4f;text-decoration:none;padding-bottom:8px}.footer-main-menu__link:hover:after{content:'';height:3px;width:50%;background-color:#005fc5;display:block;margin-top:5px}.footer-main-menu__link:hover{padding-bottom:0}.footer-main-menu__link:not(:last-child){margin-right:15px}.footer-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:970px){.footer-row{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer-data{width:calc(100% - 30px)}}.footer-data{-ms-flex-preferred-size:320px;flex-basis:320px;margin-left:auto;z-index:1}@media screen and (max-width:970px){.footer-data{margin-left:0;-ms-flex-preferred-size:320px;flex-basis:320px}}.footer-social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;margin-top:65px;margin-left:auto}@media screen and (max-width:970px){.footer-social{margin-left:0}}@media screen and (max-width:768px){footer.footer{padding-left:15px;padding-right:15px;height:auto}.footerInner{padding-left:15px;padding-right:15px}.footer-social{margin:20px auto 15px}}.footer-social__link{margin-right:15px;cursor:pointer;z-index:1}.footer-social__icon{width:23px;height:23px}.footer-social__icon_whatsapp{fill:#00f97a}.footer-social__icon_viber{fill:#8950a0}.footer-social__icon_instagram{fill:url(#insta-gradient)}.footerMap-box{display:none}@media screen and (max-width:970px){.footerMap-box{width:calc(50% - 30px);display:block}}@media screen and (max-width:768px){.footerMap-box{width:calc(100% - 30px);margin-top:20px}}.footer-phones{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:55px}@media screen and (max-width:425px){.footerMap-box{width:calc(100% - 30px)}.footer-phones{margin-right:0;text-align:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:20px}}.footer-phones__icon{height:30px;width:30px;margin-right:10px}.footer-phones__data{font-size:12.5px;line-height:22px;font-weight:500;color:#4f4f4f}.footer-place{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:auto}@media screen and (max-width:425px){.footer-phones__icon{margin-bottom:10px;width:25px;height:25px}.footer-place{text-align:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:15px}}.footer-place__icon{height:35px;width:35px;margin-right:10px}.footer-place__data{font-size:12.5px;line-height:22px;font-weight:500;color:#4f4f4f}@media screen and (max-width:1150px){.footer-social{margin-right:auto}}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@media screen and (max-width:425px){.footer-place__icon{margin-bottom:10px;width:25px;height:25px}}.header{max-width:1200px;margin:0 auto;padding:20px 15px 45px}@media screen and (max-width:970px){.header{padding-left:15px;padding-right:15px}}@media screen and (max-width:768px){.header{padding-left:15px;padding-right:15px}}.header-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:0;margin-right:0;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media screen and (max-width:425px){.header{padding-left:15px;padding-right:15px}.header-row{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.main-menu{display:none}}.main-menu{width:calc(50% - 30px);-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.main-menu__link,.mobile-main-menu__link{font-size:16px;font-weight:500;display:inline-block;color:#4f4f4f;text-decoration:none;padding-bottom:8px}.main-menu__link:hover::after,.mobile-main-menu__link:hover::after{content:'';height:3px;width:50%;background-color:#005fc5;display:block;margin-top:5px}.main-menu__link:hover,.mobile-main-menu__link:hover{padding-bottom:0}.main-menu__link:not(:last-child),.mobile-main-menu__link:not(:last-child){margin-right:15px}.mobile-main-menu{text-align:center;display:none;width:calc(100% - 30px)}@media screen and (max-width:425px){.mobile-main-menu{display:block}}.mobile-main-menu__body{opacity:0;height:0;-webkit-transition:height .5s;transition:height .5s}.mobile-main-menu__link{width:100%;padding:10px 0;display:none}.mobile-main-menu__link:hover{padding:10px 0;background-color:#b5d7f3;color:#fff}.mobile-main-menu__link:hover::after{display:none;margin-top:0}.menu__icon{display:inline-block;margin:10px 0;cursor:pointer}.menu__icon span{width:31px;height:2px;background-color:#4f4f4f;display:block}.menu__icon span:not(:last-child){margin-bottom:6px}.social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}@media screen and (max-width:425px){.social{margin-top:15px}.search{display:none}}.social__link{margin-right:15px;cursor:pointer}.social__icon{width:23px;height:23px}.social__icon_whatsapp{fill:#00f97a}.social__icon_viber{fill:#8950a0}.social__icon_instagram{fill:url(#insta-gradient)}.search{width:270px;position:relative;margin-right:20px}@media screen and (max-width:970px){.search{width:calc(100% - 30px);margin-top:10px}}.search__field{width:100%;padding:8px;font-weight:400;font-size:16px;border:1px solid #d8d8d8;border-radius:5px}.search__field:focus{outline:0}.search__button{border:0;height:100%;width:50px;background-color:#b5d7f3;border-radius:5px;position:absolute;right:0;cursor:pointer}.search__icon{width:22px;height:22px}.cart__icon-box{-webkit-box-shadow:0 0 4.75px .25px rgba(0,0,0,.22);box-shadow:0 0 4.75px .25px rgba(0,0,0,.22);border-radius:50%;width:80px;height:80px;position:relative;cursor:pointer;background-color:#fff;-ms-flex-negative:0;flex-shrink:0}@media screen and (max-width:970px){.cart__icon-box{position:fixed;bottom:20px;right:35px;z-index:120}}.cart__icon{width:45px;height:45px;position:absolute;top:0;left:-2px;right:0;bottom:0;margin:auto}.cart__counter{width:25px;height:25px;font-size:12px;text-align:center;line-height:25px;border-radius:50%;background-color:#b5d7f3;color:#fff;position:absolute;right:0;top:0}.logo{width:144px;height:100px}.phones{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:425px){.logo{width:100%}.phones{display:none}}.phones__icon{height:30px;width:30px;margin-right:10px}.phones__data{font-size:12.5px;line-height:22px;font-weight:500;color:#4f4f4f}.worktime{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:425px){.worktime{display:none}}.worktime__icon{height:35px;width:35px;margin-right:10px}.worktime__data{font-size:12.5px;line-height:22px;font-weight:500;color:#4f4f4f}.place{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:425px){.place{display:none}}.place__icon{height:35px;width:35px;margin-right:10px}.place__data{font-size:12.5px;line-height:22px;font-weight:500;color:#4f4f4f}.catalog{width:200px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:15px;border:2px solid #b5d7f3;border-radius:2px;cursor:pointer;font-weight:500}@media screen and (max-width:970px){.logo{margin-top:20px}.catalog{margin-top:20px;width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}}@media screen and (max-width:425px){.catalog{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:5px;width:150px}.catalog__icon{display:none}}.catalog__icon{margin-left:10px}@media screen and (max-width:970px){.catalog__icon{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1;margin-left:0;margin-right:10px}}.catalog__icon span{width:31px;height:2px;background-color:#4f4f4f;display:block}.catalog__icon span:not(:last-child){margin-bottom:6px}.close-block{background-color:#b5d7f3;width:53px;height:53px;position:absolute;right:5px;top:0;cursor:pointer}.close-block__line{height:2px;width:33px;background-color:#fff;position:absolute;margin:auto;top:0;bottom:0;left:0;right:0}.close-block__line:first-child{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.close-block__line:last-child{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.cart-empty{display:none;opacity:0;-webkit-transition:opacity 1s ease-in-out;transition:opacity 1s ease-in-out;width:415px;height:310px;position:absolute;right:5px;top:0;background-color:#fff;padding:30px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;text-align:center;-ms-flex-wrap:wrap;flex-wrap:wrap;z-index:110}@media screen and (max-width:425px){.cart-empty{width:100%;padding:20px}}.cart-empty__data{font-size:20px;font-weight:500;color:#4f4f4f}.cart-full{z-index:110;display:none;opacity:0;-webkit-transition:opacity 1s ease-in-out;transition:opacity 1s ease-in-out;width:415px;position:absolute;right:5px;top:0;background-color:#fff;padding:45px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;-ms-flex-wrap:wrap;flex-wrap:wrap}@media screen and (max-width:425px){.cart-full{width:100%;padding:25px}}.cart-full__title{font-size:24px;font-weight:800;color:#4f4f4f;text-transform:uppercase;margin-top:20px;margin-bottom:40px}.cart-full__line{opacity:.2;width:100%}.cart-full__count{text-align:left;margin-top:25px;margin-bottom:10px;font-weight:500;width:100%;color:#4f4f4f}.cart-full__total{text-align:left;margin-bottom:25px;font-weight:500;width:100%;color:#4f4f4f}.cart-full .button{margin-top:25px;margin-bottom:50px;display:inline-block;font-size:18px;font-weight:700}.cart-items{width:100%}.cart-item{text-align:left;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:25px}.cart-item:last-child{margin-bottom:45px}.cart-item__name{font-weight:500;color:#005fc5;font-size:18px;margin-bottom:10px}.cart-item__price{font-size:16px;font-weight:500;color:#4f4f4f}.cart-item__delete{width:25px;height:30px}.button{padding:18px 13px;background-color:#b5d7f3;border-radius:3px;font-weight:600;text-transform:uppercase;color:#4f4f4f;cursor:pointer}.catalog-window{z-index:110;display:none;opacity:0;-webkit-transition:opacity 1s ease-in-out;transition:opacity 1s ease-in-out;width:415px;position:absolute;top:0;right:0;background-color:#fff;padding:10px}@media screen and (max-width:425px){.catalog-window{width:100%;height:auto}}.catalog-window__title{font-size:24px;font-weight:800;color:#4f4f4f;text-transform:uppercase;margin-top:20px;margin-bottom:40px;text-align:center}.catalog-category{text-transform:uppercase;font-size:16px;color:#4f4f4f;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:25px;cursor:pointer}.catalog-category__title{margin-right:40px}.catalog-subcategories{padding:15px 30px;color:#4f4f4f;display:none;height:0}.catalog-subcategories__item{display:block;margin-bottom:10px;text-transform:uppercase;font-size:14px}.catalog-subcategories__item:before{content:'—';margin-right:20px}.catalog__line{opacity:.2;width:100%}.icon-arrow{min-width:30px;margin-right:20px;margin-left:auto;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.icon-arrow__line{height:2px;width:15px;background-color:#4f4f4f;display:inline-block}.icon-arrow__line:first-child{-webkit-transform:rotate(45deg);transform:rotate(45deg);position:relative;right:-2px}.icon-arrow__line:last-child{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);position:relative;left:-2px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@media screen and (max-width:425px){.catalog-subcategories{padding:15px 10px}}.howToBuy{max-width:1200px;margin:0 auto;padding:80px 0}@media screen and (max-width:970px){.howToBuy{padding-left:15px;padding-right:15px}}.howToBuy__title{color:#4f4f4f;margin-bottom:30px;display:inline-block;text-transform:uppercase;font-weight:800;font-size:24px;line-height:30px}.howToBuy__title:after{content:'';height:3px;width:50%;background-color:#005fc5;display:block;margin-top:5px}@media screen and (max-width:768px){.howToBuy{padding-left:15px;padding-right:15px}.howToBuy__title{text-align:center;margin-left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.howToBuy__title:after{width:100%}}@media screen and (max-width:425px){.howToBuy{padding:40px 0 0}.howToBuy__title{margin-bottom:25px;width:100%}.howToBuy__title:after{background-color:#b5d7f3}}.howToBuy-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:0;margin-right:0}.order{-webkit-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;margin-left:0;margin-right:0;width:calc(66.66667% - 30px)}@media screen and (max-width:970px){.order{width:calc(100% - 30px)}}.question{-webkit-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;margin-right:0;margin-left:auto}.orderBox{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:30px}@media screen and (max-width:425px){.order{width:100%}.orderBox{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center}}.orderBox__number{width:60px;height:60px;text-align:center;line-height:40px;font-size:30px;color:#b5d7f3;font-weight:500;border:2px solid #b5d7f3;border-radius:50%;padding:10px;margin-right:30px;-ms-flex-negative:0;flex-shrink:0}.orderBox__text{color:#4f4f4f;font-size:16px;line-height:20px;font-weight:500;padding-top:35px;padding-bottom:35px;border-bottom:1px solid #eff0f2;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@media screen and (max-width:425px){.orderBox__number{margin-right:0}.orderBox__text{font-size:14px;padding-bottom:15px;padding-top:15px;width:100%}.preim{padding-left:15px;padding-right:15px}}.preim-outer{background:url(resources/images/preim.jpg) no-repeat;background-size:cover;padding-bottom:80px}@media screen and (max-width:970px){.question{display:none}.preim-outer{margin-left:-15px;margin-right:-15px}.preim{padding-left:15px;padding-right:15px}}.preim{max-width:1200px;margin:0 auto;padding-left:15px;padding-right:15px}.preim__title{font-size:36px;color:#fff;margin:50px 0;display:inline-block}.preim__title:after{content:'';height:3px;width:50%;background-color:#005fc5;display:block;margin-top:5px}@media screen and (max-width:425px){.preim__title{text-transform:uppercase;font-size:25px;margin-bottom:20px}.preim__title:after{display:none}}.preim-row{display:-webkit-box;display:-ms-flexbox;display:flex}@media screen and (max-width:768px){.preim{padding-left:15px;padding-right:15px;text-align:center}.preim-row{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.iconBox{width:calc(41.66667% - 30px);display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;color:#fff;font-size:14px;text-transform:uppercase;font-weight:500;-ms-flex-preferred-size:420px;flex-basis:420px;-ms-flex-negative:0;flex-shrink:0}@media screen and (max-width:768px){.iconBox{width:calc(100% - 30px)}}@media screen and (max-width:425px){.iconBox{-ms-flex-preferred-size:300px;flex-basis:300px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.iconBlock{-ms-flex-preferred-size:120px;flex-basis:120px;text-align:center;margin-bottom:15px;margin-right:15px;margin-top:15px}.iconBlock__icon{height:70px;width:70px;border:2px solid #fff;border-radius:50%;padding:10px;margin-bottom:5px}.preimBox{width:calc(58.33333% - 30px);margin-left:calc(8.33333% + 15px);text-align:right;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}@media screen and (max-width:970px){.preim__title:after{width:100%}.preimBox{margin-left:calc(0% + 15px);-webkit-box-align:center;-ms-flex-align:center;align-items:center}}@media screen and (max-width:768px){.preimBox{-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;margin-top:50px}}.preimBox__title{color:#fff;margin-bottom:30px;display:inline-block;text-transform:uppercase;font-weight:500;font-size:24px;line-height:30px;-ms-flex-preferred-size:440px;flex-basis:440px}.preimBox__title:after{content:'';height:3px;width:50%;margin-left:50%;background-color:#005fc5;display:block;margin-top:5px}@media screen and (max-width:425px){.preimBox{width:calc(100% - 30px);margin-left:0;margin-top:30px}.preimBox__title{text-transform:uppercase;font-size:20px;margin-bottom:20px;font-weight:700}.preimBox__title:after{background-color:#fff}}.preimBox__text{color:#fff;font-size:14px;line-height:28px;font-weight:500}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.products{max-width:1200px;margin:0 auto;padding:80px 0}@media screen and (max-width:970px){.products{padding-left:15px;padding-right:15px}}@media screen and (max-width:768px){.preimBox__title:after{margin-left:0;width:100%}.products{padding-left:15px;padding-right:15px}}.products__title{font-size:36px;color:#4f4f4f;margin-bottom:50px;display:inline-block;margin-left:15px}.products__title:after{content:'';height:3px;width:50%;background-color:#005fc5;display:block;margin-top:5px}.mini-slider{width:calc(58.33333% - 30px);position:relative;height:400px;margin-right:20px}@media screen and (max-width:425px){.products{padding:30px 15px}.products__title{font-size:25px;margin-left:0;text-align:center;margin-bottom:20px}.products__title:after{width:0}.mini-slider{margin-right:0;margin-bottom:30px}}.mini-slider__content{position:absolute;z-index:100;height:100%;padding:30px}@media screen and (max-width:425px){.mini-slider__content{width:100%;padding:15px 10px;text-align:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}.mini-slider__title{width:270px;font-size:42px;font-weight:500;color:#4f4f4f;line-height:50px;margin-bottom:50px}@media screen and (max-width:425px){.mini-slider__title{width:auto;font-size:25px;line-height:30px;font-weight:600;margin-bottom:10px}}.mini-slider__button{width:155px;border:2px solid #b5d7f3;text-align:center;padding-bottom:15px;padding-top:15px;border-radius:2px;font-weight:500;color:#4f4f4f;cursor:pointer}.mini-slider__item{position:absolute;left:0;top:0;width:100%;opacity:0;z-index:1;-webkit-transition:opacity 1s;transition:opacity 1s;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.mini-slider__item-img{height:400px;-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center}.mini-slider__dots{position:absolute;bottom:15px;left:35px;z-index:100}@media screen and (max-width:425px){.mini-slider__button{margin:0 auto;padding-bottom:10px;padding-top:10px;font-weight:600;background-color:rgba(255,255,255,.493)}.mini-slider__dots{bottom:-29px;left:0;right:0;text-align:center;background:rgba(0,0,0,.5);padding-top:4px}}.products__layout{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.products__layoutBox{width:calc(41.66667% - 30px);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}@media screen and (max-width:768px){.products__layoutBox{width:calc(100% - 30px)}}.product-one__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid #bababa;padding:15px;height:190px}.product-one__img{width:240px}@media screen and (max-width:970px){.product-one__item{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.product-one__img{width:200px}}.product-one__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:right;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.product-one__title{color:#4f4f4f;font-size:32px;font-weight:500;margin-bottom:35px}@media screen and (max-width:970px){.product-one__content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.product-one__title{margin-bottom:0;font-size:24px}}.product-one__button{border:2px solid #b5d7f3;width:128px;font-size:16px;text-align:center;padding-bottom:10px;padding-top:10px;border-radius:2px;font-weight:500;color:#4f4f4f;cursor:pointer;margin-left:auto}@media screen and (max-width:860px){.products__layoutBox{display:none}.mini-slider,.mini-slider__item-img{width:100%}}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%;max-height:100%}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}h1,h2,h3,h4,h5,h6,p{margin:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{margin:0;font-family:Montserrat}.debugger{height:100vh;position:fixed;width:100%}.debugger>div{height:inherit;max-width:1200px;margin:0 auto;padding-left:15px;padding-right:15px}.debugger>div>div{height:inherit;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px}.debugger>div>div>div{-webkit-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(8.33333% - 30px);height:inherit;outline:green;background:rgba(255,68,0,.205)}.wrapper-full{padding:0}.wrapper{max-width:1200px;margin:0 auto;padding-left:15px;padding-right:15px}.slider{position:relative;height:814px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:970px){.debugger>div,.wrapper,.wrapper-full{padding-left:15px;padding-right:15px}.slider{height:600px;margin-left:-15px;margin-right:-15px}}@media screen and (max-width:768px){.debugger>div,.wrapper,.wrapper-full{padding-left:15px;padding-right:15px}.slider{height:400px}}@media screen and (max-width:425px){.debugger>div,.wrapper,.wrapper-full{padding-left:15px;padding-right:15px}.slider{height:300px}}.slider__title{text-align:center;font-size:100px;font-weight:800;position:absolute;top:0;left:0;right:0;bottom:0;margin:auto;color:#fff;z-index:100;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.slider__title span{background-color:#b5d7f3}.slider__item{position:absolute;left:0;top:0;width:100%;opacity:0;z-index:1;-webkit-transition:opacity 1s;transition:opacity 1s;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slider__item-img{height:814px;-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center;margin:0 auto}@media screen and (max-width:970px){.slider__item-img{height:600px}}@media screen and (max-width:768px){.slider__title{font-size:60px}.slider__item-img{height:400px}}.slider__dots{position:absolute;bottom:0;z-index:100;margin-bottom:58px}@media screen and (max-width:425px){.slider__title{font-size:35px}.slider__item-img{height:300px}.slider__dots{margin-bottom:20px}}.dot{border-radius:50%;background-color:#fff;width:20px;height:20px;margin:5px;display:inline-block;cursor:pointer}@media screen and (max-width:425px){.dot{width:15px;height:15px}}.dot_active{background-color:#b5d7f3}.visible{opacity:1;z-index:2}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
